# GLI Django API Server Development Environment

# Django Core Settings
DJANGO_SECRET_KEY=gli-development-secret-key-change-in-production
DJANGO_ENV=development
DJANGO_DEBUG=True
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# Database Settings (Local Docker PostgreSQL - gli_database/)
# Note: 로컬 개발 시 `./restart-database.sh --bf` 또는 `cd gli_database && docker-compose up -d` 실행
DATABASE_NAME=gli
DATABASE_USER=gli
DATABASE_PASSWORD=gli123!
DATABASE_HOST=localhost
DATABASE_PORT=5433

# JWT Settings
JWT_ACCESS_TOKEN_LIFETIME=30
JWT_REFRESH_TOKEN_LIFETIME=1440
JWT_ROTATE_REFRESH_TOKENS=False

# Solana Settings
SOLANA_NETWORK=devnet
SOLANA_RPC_URL=https://api.devnet.solana.com

# CORS Settings
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173

# API Settings
API_VERSION=v1
API_RATE_LIMIT=1000

# Logging Settings
LOG_LEVEL=DEBUG
LOG_TO_FILE=False

# AWS Settings (Development - Staging 버킷 사용)
AWS_ACCESS_KEY_ID=AKIA5LNU5WLWUA55GAOG
AWS_SECRET_ACCESS_KEY=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
AWS_STORAGE_BUCKET_NAME=gli-platform-media-staging
AWS_S3_REGION=ap-northeast-2

# Email Settings (for development)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
EMAIL_HOST=
EMAIL_PORT=
EMAIL_USE_TLS=False
# Generated by Django 5.0.2 on 2025-08-02 02:30

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RWACategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=100)),
                ('order', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'rwa_categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingCategory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=100)),
                ('order', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'shopping_categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BusinessContent',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('section', models.CharField(choices=[('background', '회사 소개'), ('team', '사업 소개'), ('strategy', '사업 계획'), ('roadmap', '생태계 토큰'), ('tokens', '추진 사업')], db_index=True, max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('content', models.TextField()),
                ('image_url', models.URLField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(db_index=True, default=0)),
                ('status', models.CharField(choices=[('draft', '초안'), ('published', '게시됨'), ('archived', '보관됨')], default='published', max_length=20)),
                ('meta_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'business_contents',
                'ordering': ['section', 'order'],
                'unique_together': {('section', 'order')},
            },
        ),
        migrations.CreateModel(
            name='RWAAsset',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=500)),
                ('total_value_usd', models.DecimalField(decimal_places=2, max_digits=15)),
                ('min_investment_gleb', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_investment_gleb', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('expected_apy', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('historical_returns', models.JSONField(blank=True, default=list)),
                ('risk_level', models.CharField(choices=[('low', '낮음'), ('medium', '보통'), ('high', '높음'), ('very_high', '매우 높음')], default='medium', max_length=20)),
                ('risk_factors', models.JSONField(blank=True, default=list)),
                ('investment_period_months', models.PositiveIntegerField()),
                ('lock_period_months', models.PositiveIntegerField(default=0)),
                ('asset_location', models.CharField(blank=True, max_length=200)),
                ('asset_type', models.CharField(max_length=100)),
                ('underlying_assets', models.JSONField(blank=True, default=dict)),
                ('main_image_url', models.URLField(blank=True)),
                ('image_urls', models.JSONField(blank=True, default=list)),
                ('document_urls', models.JSONField(blank=True, default=list)),
                ('total_invested_gleb', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('investor_count', models.PositiveIntegerField(default=0)),
                ('funding_target_gleb', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('status', models.CharField(choices=[('draft', '초안'), ('active', '투자 가능'), ('paused', '일시 중단'), ('completed', '완료'), ('cancelled', '취소')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='gli_content.rwacategory')),
            ],
            options={
                'db_table': 'rwa_assets',
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingOrder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('total_amount_glil', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_amount_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('pending', '결제 대기'), ('paid', '결제 완료'), ('processing', '처리 중'), ('shipped', '발송됨'), ('delivered', '배송 완료'), ('cancelled', '취소'), ('refunded', '환불 완료')], default='pending', max_length=20)),
                ('payment_tx_hash', models.CharField(blank=True, max_length=100)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('shipping_address', models.JSONField(blank=True, default=dict)),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'shopping_orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingProduct',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=500)),
                ('product_type', models.CharField(choices=[('goods', '일반 상품'), ('resort', '리조트 예약'), ('restaurant', '레스토랑 예약'), ('service', '서비스')], default='goods', max_length=20)),
                ('price_glil', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('price_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('unlimited_stock', models.BooleanField(default=False)),
                ('main_image_url', models.URLField(blank=True)),
                ('image_urls', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('active', '활성'), ('inactive', '비활성'), ('sold_out', '품절'), ('discontinued', '단종')], default='active', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('attributes', models.JSONField(blank=True, default=dict)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('purchase_count', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='gli_content.shoppingcategory')),
            ],
            options={
                'db_table': 'shopping_products',
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingOrderItem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=200)),
                ('product_price_glil', models.DecimalField(decimal_places=8, max_digits=20)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('selected_attributes', models.JSONField(blank=True, default=dict)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gli_content.shoppingorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gli_content.shoppingproduct')),
            ],
            options={
                'db_table': 'shopping_order_items',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount_gleb', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('amount_usd_at_time', models.DecimalField(decimal_places=2, max_digits=15)),
                ('investment_date', models.DateTimeField(auto_now_add=True)),
                ('expected_return_date', models.DateTimeField()),
                ('lock_end_date', models.DateTimeField(blank=True, null=True)),
                ('expected_apy_at_time', models.DecimalField(decimal_places=2, max_digits=5)),
                ('current_value_gleb', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('realized_profit_gleb', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('status', models.CharField(choices=[('pending', '처리 중'), ('confirmed', '확정'), ('active', '투자 중'), ('completed', '완료'), ('cancelled', '취소'), ('failed', '실패')], default='pending', max_length=20)),
                ('investment_tx_hash', models.CharField(blank=True, max_length=100)),
                ('withdrawal_tx_hash', models.CharField(blank=True, max_length=100)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('investor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investments', to=settings.AUTH_USER_MODEL)),
                ('rwa_asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investments', to='gli_content.rwaasset')),
            ],
            options={
                'db_table': 'investments',
                'ordering': ['-investment_date'],
                'indexes': [models.Index(fields=['investor', 'status'], name='investments_investo_49ded7_idx'), models.Index(fields=['rwa_asset', 'status'], name='investments_rwa_ass_c871e4_idx'), models.Index(fields=['-investment_date'], name='investments_investm_d1de42_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='rwaasset',
            index=models.Index(fields=['category', 'status'], name='rwa_assets_categor_ed240e_idx'),
        ),
        migrations.AddIndex(
            model_name='rwaasset',
            index=models.Index(fields=['risk_level', 'status'], name='rwa_assets_risk_le_4b272a_idx'),
        ),
        migrations.AddIndex(
            model_name='rwaasset',
            index=models.Index(fields=['-is_featured', '-created_at'], name='rwa_assets_is_feat_a378f2_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingorder',
            index=models.Index(fields=['customer', 'status'], name='shopping_or_custome_66824e_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingorder',
            index=models.Index(fields=['-created_at'], name='shopping_or_created_912a6b_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingorder',
            index=models.Index(fields=['order_number'], name='shopping_or_order_n_0ddc42_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingproduct',
            index=models.Index(fields=['category', 'status'], name='shopping_pr_categor_c946bf_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingproduct',
            index=models.Index(fields=['product_type', 'status'], name='shopping_pr_product_75ea01_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppingproduct',
            index=models.Index(fields=['-is_featured', '-created_at'], name='shopping_pr_is_feat_450291_idx'),
        ),
    ]
